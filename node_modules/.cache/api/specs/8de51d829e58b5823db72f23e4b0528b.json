{
  "openapi": "3.0.0",
  "security": [
    {
      "basicAuth": []
    }
  ],
  "info": {
    "title": "Authentication.Session",
    "description": "Session Endpoints",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://session.voxeet.com/v1"
    }
  ],
  "paths": {
    "/oauth2/token": {
      "post": {
        "summary": "Generate a client access token",
        "tags": [
          "Authentication"
        ],
        "operationId": "get-client-access-token",
        "description": "This API returns an access token that your backend can request on behalf of a client to initialize the Dolby.io SDK in a secure way. Make sure to use this API against `https://session.voxeet.com`.\n",
        "parameters": [
          {
            "name": "Cache-Control",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "no-cache"
            }
          },
          {
            "in": "header",
            "name": "Content-Type",
            "schema": {
              "type": "string",
              "default": "application/x-www-form-urlencoded"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "grant_type"
                ],
                "properties": {
                  "grant_type": {
                    "type": "string",
                    "default": "client_credentials",
                    "description": "Make a request to the token endpoint by setting the value of the [grant_type](https://tools.ietf.org/html/rfc6749#section-1.3) parameter to `client_credentials`."
                  },
                  "expires_in": {
                    "type": "integer",
                    "example": "3600",
                    "description": "Access token expiration time in seconds. The maximum value is 86,400, indicating 24 hours. If no value is specified, the default is 3,600, indicating one hour."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token_type": {
                      "type": "string",
                      "description": "Access token type, for example, \"Bearer\""
                    },
                    "access_token": {
                      "type": "string",
                      "description": "Access token"
                    },
                    "refresh_token": {
                      "type": "string",
                      "description": "Refresh token. This API is deprecated."
                    },
                    "expires_in": {
                      "type": "integer",
                      "description": "Access token expiration time in seconds"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.\n\nThis may happen if the body of your request does not define the client_credentials grant_type. The error may be either an invalid_request or an invalid_grant.\n"
          },
          "401": {
            "description": "Invalid client.\n\nClient authentication failed due to an unknown client, no client authentication was included, or the authentication method is unsupported.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "error": "invalid_client"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "description": "### Credentials\n\nYou will need your `App key` and `App secret` from the Dolby.io developer dashboard. Use your preferred programming tool to concatenate the key and secret divided with a colon \":\" and then encode with Base64. The Base64 encoded string is then appended to \"Basic\" after a space character so it looks like this example below:\n```\nBasic YWJjZGVmZ2hBQkNERUZHSGFiY2RlZj09OmFiY2RlZmdoQUJDREVGR0hhYmNkZWZnaDEyMzQ1Njc4YWJjZGVmZ2g9\n```\n\n### Examples for generating the Basic Authentication credentials \n\n**Node.js**\n```\nconst key='abcdefghABCDEFGHabcdef==';\nconst secret='abcdefghABCDEFGHabcdefgh12345678abcdefgh=';\nconst basic_credentials = new Buffer.from(key + ':' + secret).toString('base64');\n\nconsole.log(basic_credentials);\n```\n**JavaScript**\n```\nconst key='abcdefghABCDEFGHabcdef==';\nconst secret='abcdefghABCDEFGHabcdefgh12345678abcdefgh=';\nconst basic_credentials = btoa(encodeURI(key) + ':' + encodeURI(secret));\n\nconsole.log(basic_credentials);\n",
        "scheme": "basic"
      }
    },
    "schemas": {
      "jwt": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Access token in JWT format"
          },
          "expires_in": {
            "type": "integer",
            "description": "Access token expiration time in seconds"
          },
          "token_type": {
            "type": "string",
            "description": "Bearer"
          }
        }
      },
      "oauth2_response": {
        "type": "object",
        "properties": {
          "token_type": {
            "type": "string",
            "description": "Access token type, for example, \"Bearer\""
          },
          "access_token": {
            "type": "string",
            "description": "Access token"
          },
          "refresh_token": {
            "type": "string",
            "description": "Refresh token. This API is deprecated."
          },
          "expires_in": {
            "type": "integer",
            "description": "Access token expiration time in seconds"
          }
        }
      }
    }
  }
}