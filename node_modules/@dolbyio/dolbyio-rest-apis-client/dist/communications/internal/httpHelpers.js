"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAll = void 0;
const httpHelpers_1 = require("../../internal/httpHelpers");
/**
 * Get all the elements available.
 *
 * @param options Request options.
 * @param propertyName Name of the property that contains the elements of the page.
 *
 * @returns An array of objects of type `TReturn` through a Promise.
 */
function getAll(options, propertyName) {
    return __awaiter(this, void 0, void 0, function* () {
        if (!options.params) {
            options.params = {};
        }
        const result = [];
        do {
            const response = yield (0, httpHelpers_1.sendGet)(options);
            if (response.hasOwnProperty(propertyName)) {
                const objects = response[propertyName];
                for (let index = 0; index < objects.length; index++) {
                    const object = objects[index];
                    result.push(object);
                }
            }
            const pagedResponse = response;
            if (!pagedResponse.next || pagedResponse.next.length <= 0) {
                break;
            }
            options.params['start'] = pagedResponse.next;
        } while (true);
        return result;
    });
}
exports.getAll = getAll;
//# sourceMappingURL=httpHelpers.js.map